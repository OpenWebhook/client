{"version":3,"mappings":"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","names":["useState","core.colorsBlack","ReactDOM"],"sources":["../../vite/modulepreload-polyfill","../../vite/preload-helper","../../src/RedirectUrl/RedirectUrl.context.ts","../../src/WebhookStoreUrl/WebhookStoreUrl.context.ts","../../src/apollo.client.ts","../../src/use-state-with-local-storage.hook.ts","../../src/utils/is-valid-url.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","const scriptRel = 'modulepreload';const seen = {};const base = '/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import React from \"react\";\n\nexport const RedirectUrlContext = React.createContext({\n  value: \"http://localhost:8010/proxy\",\n  setValue: (_newValue: string) => {\n    return;\n  },\n});\n","import React from \"react\";\n\nexport const WebhookStoreUrlContext = React.createContext({\n  value: \"https://webhook-store.herokuapp.com\",\n  setValue: (_newValue: string) => {\n    return;\n  },\n});\n","import { ApolloClient, InMemoryCache, HttpLink, split } from \"@apollo/client\";\nimport { GraphQLWsLink } from \"@apollo/client/link/subscriptions\";\nimport { getMainDefinition } from \"@apollo/client/utilities\";\nimport { createClient } from \"graphql-ws\";\n\nexport const createApolloClient = (httpUrl: string) => {\n  const origin = new URL(httpUrl).origin;\n  const graphqlUrl = `${origin}/graphql`;\n  const wsUrl = graphqlUrl.replace(\"http\", \"ws\");\n\n  const httpLink = new HttpLink({\n    uri: graphqlUrl,\n  });\n\n  const wsLink = new GraphQLWsLink(\n    createClient({\n      url: wsUrl,\n    })\n  );\n\n  const splitLink = split(\n    ({ query }) => {\n      const definition = getMainDefinition(query);\n      return (\n        definition.kind === \"OperationDefinition\" &&\n        definition.operation === \"subscription\"\n      );\n    },\n    wsLink,\n    httpLink\n  );\n\n  return new ApolloClient({\n    link: splitLink,\n    cache: new InMemoryCache(),\n  });\n};\n","import posthog from \"posthog-js\";\nimport { useState } from \"react\";\n\nexport const useStateInLocalStorage = (\n  localStorageKey: string,\n  initialValue: string,\n  validator: (newValue: string) => boolean\n): [string, (newValue: string) => void] => {\n  const initialWebhookStoreUrl =\n    localStorage.getItem(localStorageKey) || initialValue;\n  const [value, setValue] = useState(initialWebhookStoreUrl);\n  const setWebhookStoreURLInLocalStorage = (newValue: string) => {\n    if (validator(newValue)) {\n      localStorage.setItem(localStorageKey, newValue);\n      setValue(newValue);\n    } else {\n      console.warn(\"invalid new value, not stored\");\n    }\n    posthog.capture(`${localStorageKey} update attempt`, {\n      value: newValue,\n    });\n  };\n  return [value, setWebhookStoreURLInLocalStorage];\n};\n","export function isValidHttpUrl(maybeUrl: string) {\n  let url;\n\n  try {\n    url = new URL(maybeUrl);\n  } catch (_) {\n    return false;\n  }\n\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n","import \"@pluralsight/ps-design-system-normalize\";\n\nimport React, { Suspense } from \"react\";\n\nconst AppFrame = React.lazy(\n  () => import(\"@pluralsight/ps-design-system-appframe\")\n);\nconst SkillsTopNav = React.lazy(() => import(\"./TopNav\"));\nimport * as core from \"@pluralsight/ps-design-system-core\";\nimport Theme from \"@pluralsight/ps-design-system-theme\";\n\nconst WebhookList = React.lazy(\n  () => import(\"./WebhookDisplay/WebhookList.component\")\n);\nimport { ApolloProvider } from \"@apollo/client\";\nimport { RedirectUrlContext } from \"./RedirectUrl/RedirectUrl.context\";\nimport { WebhookStoreUrlContext } from \"./WebhookStoreUrl/WebhookStoreUrl.context\";\nimport { createApolloClient } from \"./apollo.client\";\nimport { useStateInLocalStorage } from \"./use-state-with-local-storage.hook\";\nimport { isValidHttpUrl } from \"./utils/is-valid-url\";\n\n// https://coolors.co/23f0c7-fb6107-f3de2c-5c8001-fbb02d\n\nexport default function App() {\n  const [redirectUrl, setRedirectUrl] = useStateInLocalStorage(\n    \"redirectUrl\",\n    \"http://localhost:8010/proxy\",\n    isValidHttpUrl\n  );\n\n  const defaultWebhookStoreUrl =\n    window.location.hostname === \"demo.openwebhook.io\"\n      ? \"https://webhook-store.herokuapp.com\"\n      : window.location.origin;\n\n  const [webhookStoreUrl, setWebhooksStoreUrl] = useStateInLocalStorage(\n    \"webhookStoreUrl\",\n    defaultWebhookStoreUrl,\n    isValidHttpUrl\n  );\n\n  return (\n    <WebhookStoreUrlContext.Provider\n      value={{\n        value: webhookStoreUrl,\n        setValue: setWebhooksStoreUrl,\n      }}\n    >\n      <ApolloProvider client={createApolloClient(webhookStoreUrl)}>\n        <Theme name={Theme.names.dark}>\n          <RedirectUrlContext.Provider\n            value={{\n              value: redirectUrl,\n              setValue: setRedirectUrl,\n            }}\n          >\n            <Suspense fallback={<div>Loading...</div>}>\n              <AppFrame\n                topnav={() => {\n                  return <SkillsTopNav />;\n                }}\n              >\n                <div style={{ background: core.colorsBlack }}>\n                  <WebhookList />\n                </div>\n              </AppFrame>\n            </Suspense>\n          </RedirectUrlContext.Provider>\n        </Theme>\n      </ApolloProvider>\n    </WebhookStoreUrlContext.Provider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Honeybadger from \"@honeybadger-io/js\";\nimport { HoneybadgerErrorBoundary } from \"@honeybadger-io/react\";\nimport posthog from \"posthog-js\";\n\nHoneybadger.configure({\n  apiKey: import.meta.env.VITE_HONEYBADGER_API_KEY as string,\n  environment: import.meta.env.MODE,\n});\n\nposthog.init(import.meta.env.VITE_POSTHOG_API_KEY as string, {\n  api_host: \"https://app.posthog.com\",\n});\n\nposthog.capture(\"my event\", { property: \"value\" });\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <HoneybadgerErrorBoundary honeybadger={Honeybadger}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HoneybadgerErrorBoundary>\n);\n"],"file":"assets/index.20874b4d.js"}